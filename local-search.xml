<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>markdown语法</title>
    <link href="/2022/09/01/%E5%9F%BA%E6%9C%AC%E6%8A%80%E8%83%BD/markdown%E8%AF%AD%E6%B3%95/"/>
    <url>/2022/09/01/%E5%9F%BA%E6%9C%AC%E6%8A%80%E8%83%BD/markdown%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h1><p>在想要设置为标题的文字前面加#来表示</p><p>注：标准语法一般在#后跟个空格再写文字</p><p>示例：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs clean"># 这是一级标题<br>## 这是二级标题<br>### 这是三级标题<br>#### 这是四级标题<br>##### 这是五级标题<br>###### 这是六级标题<br></code></pre></td></tr></table></figure><p>效果如下：</p><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><h1 id="二、字体"><a href="#二、字体" class="headerlink" title="二、字体"></a>二、字体</h1><p>斜体</p><p>要倾斜的文字左右分别用一个*号包起来</p><p>加粗</p><p>要加粗的文字左右分别用两个*号包起来</p><p>斜体加粗</p><p>要倾斜和加粗的文字左右分别用三个*号包起来</p><p>删除线</p><p>要加删除线的文字左右分别用两个~~号包起来</p><p>示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-emphasis">*这是倾斜的文字*</span>`<br><span class="hljs-strong">**这是加粗的文字**</span><br><span class="hljs-strong">**<span class="hljs-emphasis">*这是斜体加粗的文字*</span>**</span><br>~~这是加删除线的文字~~<br></code></pre></td></tr></table></figure><p>效果如下：</p><p><em>这是倾斜的文字</em></p><p><strong>这是加粗的文字</strong></p><p><em><strong>这是斜体加粗的文字</strong></em></p><p><del>这是加删除线的文字</del></p>]]></content>
    
    
    <categories>
      
      <category>基本技能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Hexo搭建博客并部署到Gitee或者Github</title>
    <link href="/2022/09/01/%E5%9F%BA%E6%9C%AC%E6%8A%80%E8%83%BD/%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%88%B0Gitee%E6%88%96%E8%80%85Github/"/>
    <url>/2022/09/01/%E5%9F%BA%E6%9C%AC%E6%8A%80%E8%83%BD/%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%88%B0Gitee%E6%88%96%E8%80%85Github/</url>
    
    <content type="html"><![CDATA[<p>Hexo官方文档地址：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul><li><strong>安装Git</strong></li></ul><p>Git官网下载[<a href="https://git-scm.com/downloads">下载地址</a>]。</p><ul><li><strong>安装Node.js</strong></li></ul><p>推荐长期支持版[<a href="https://nodejs.org/zh-cn/download/">下载地址</a>]。<br>安装淘宝镜像cnpm加速</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs git">npm install -g cnpm --registry=https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure><h3 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h3><h4 id="1-安装Hexo"><a href="#1-安装Hexo" class="headerlink" title="1. 安装Hexo"></a>1. 安装Hexo</h4><p>打开终端，输入命令  cnpm install -g hexo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs git">C:\Users\QDM&gt;cnpm install -g hexo<br>Downloading hexo to C:\Users\QDM\AppData\Roaming\npm\node_modules\hexo_tmp<br>Copying C:\Users\QDM\AppData\Roaming\npm\node_modules\hexo_tmp\_hexo@6.2.0@hexo to C:\Users\QDM\AppData\Roaming\npm\node_modules\hexo<br>Installing hexo&#x27;s dependencies to C:\Users\QDM\AppData\Roaming\npm\node_modules\hexo/node_modules<br>[1/24] pretty-hrtime@^1.0.3 installed at node_modules\_pretty-hrtime@1.0.3@pretty-hrtime<br>[2/24] archy@^1.0.0 installed at node_modules\_archy@1.0.0@archy<br>[3/24] picocolors@^1.0.0 installed at node_modules\_picocolors@1.0.0@picocolors<br>[4/24] hexo-log@^3.0.0 installed at node_modules\_hexo-log@3.2.0@hexo-log<br>[5/24] abbrev@^1.1.1 installed at node_modules\_abbrev@1.1.1@abbrev<br>[6/24] tildify@^2.0.0 installed at node_modules\_tildify@2.0.0@tildify<br>[7/24] hexo-front-matter@^3.0.0 installed at node_modules\_hexo-front-matter@3.0.0@hexo-front-matter<br>[8/24] text-table@^0.2.0 installed at node_modules\_text-table@0.2.0@text-table<br>[9/24] titlecase@^1.1.3 installed at node_modules\_titlecase@1.1.3@titlecase<br>[10/24] hexo-i18n@^1.0.0 installed at node_modules\_hexo-i18n@1.0.0@hexo-i18n<br>[11/24] strip-ansi@^6.0.0 installed at node_modules\_strip-ansi@6.0.1@strip-ansi<br>[12/24] js-yaml@^4.1.0 installed at node_modules\_js-yaml@4.1.0@js-yaml<br>[13/24] js-yaml-js-types@^1.0.0 installed at node_modules\_js-yaml-js-types@1.0.0@js-yaml-js-types<br>[14/24] bluebird@^3.7.2 installed at node_modules\_bluebird@3.7.2@bluebird<br>[15/24] hexo-fs@^3.1.0 installed at node_modules\_hexo-fs@3.1.0@hexo-fs<br>[16/24] nunjucks@^3.2.3 installed at node_modules\_nunjucks@3.2.3@nunjucks<br>[17/24] micromatch@^4.0.4 installed at node_modules\_micromatch@4.0.5@micromatch<br>[18/24] moize@^6.1.0 installed at node_modules\_moize@6.1.2@moize<br>[19/24] warehouse@^4.0.1 installed at node_modules\_warehouse@4.0.2@warehouse<br>[20/24] resolve@^1.22.0 installed at node_modules\_resolve@1.22.1@resolve<br>[21/24] hexo-cli@^4.3.0 installed at node_modules\_hexo-cli@4.3.0@hexo-cli<br>[22/24] moment@^2.29.1 installed at node_modules\_moment@2.29.4@moment<br>[23/24] moment-timezone@^0.5.34 installed at node_modules\_moment-timezone@0.5.37@moment-timezone<br>[24/24] hexo-util@^2.6.1 installed at node_modules\_hexo-util@2.7.0@hexo-util<br>All packages installed (95 packages installed from npm registry, used 4s(network 4s), speed 1.19MB/s, json 94(499.16KB), tarball 4.63MB, manifests cache hit 0, etag hit 0 / miss 0)<br>[hexo@6.2.0] link C:\Users\QDM\AppData\Roaming\npm\hexo@ -&gt; C:\Users\QDM\AppData\Roaming\npm\node_modules\hexo\bin\hexo<br></code></pre></td></tr></table></figure><h4 id="2-初始化Hexo"><a href="#2-初始化Hexo" class="headerlink" title="2. 初始化Hexo"></a>2. 初始化Hexo</h4><p>在你的电脑上创建Hexo文件夹，在终端中切换到Hexo目录，输入命令 hexo init</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs git">E:\lsf\study\project\Blog\Hexo&gt;hexo init<br>INFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git<br>[32mINFO [39m Install dependencies<br>warning hexo-renderer-stylus &gt; stylus &gt; css &gt; source-map-resolve@0.6.0: See https://github.com/lydell/source-map-resolve#deprecated<br>[#############################################################################################################] 463/463 warning Your current version of Yarn is out of date. The latest version is &quot;1.22.19&quot;, while you&#x27;re on &quot;1.22.18&quot;.<br>INFO  Start blogging with Hexo!<br></code></pre></td></tr></table></figure><p>初始化完成后Hexo的目录结构<br><img src="https://cdn.nlark.com/yuque/0/2022/png/2597840/1661838697227-4cf8e0c3-5ad1-4abf-8f08-bd614302defb.png#clientId=u5e733837-f419-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=307&id=ub4a952a4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=307&originWidth=445&originalType=binary&ratio=1&rotation=0&showTitle=false&size=16062&status=done&style=none&taskId=u690331a4-303c-4db1-b993-ff875bd12c4&title=&width=445" alt="image.png"></p><h4 id="3-更换博客主题"><a href="#3-更换博客主题" class="headerlink" title="3. 更换博客主题"></a>3. 更换博客主题</h4><p>这里以 <a href="https://github.com/fluid-dev/hexo-theme-fluid"><strong>hexo-theme-fluid</strong></a>** **主题为例<br>Hexo Fluid使用手册：<a href="">https://hexo.fluid-dev.com/docs/</a><br>（1）获取主题最新版本<br>方式一：<br>Hexo 5.0.0 版本以上，推荐通过 npm 直接安装，进入博客目录执行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs git">npm install --save hexo-theme-fluid<br></code></pre></td></tr></table></figure><p>然后在博客目录下创建 _config.fluid.yml，将主题的 <a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml">_config.yml</a> 内容复制进去。<br>方式二：<br>下载 <a href="https://github.com/fluid-dev/hexo-theme-fluid/releases">最新 release 版本</a> 解压到 themes 目录，并将解压出的文件夹重命名为 fluid。<br>（2）指定主题<br>如下修改 Hexo 博客目录中的 _config.yml：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs git">theme: fluid  # 指定主题<br><br>language: zh-CN  # 指定语言，会影响主题显示的语言，按需修改<br></code></pre></td></tr></table></figure><p>想获取更多主题，可在网站： <a href="https://link.juejin.cn/?target=https://hexo.io/themes/">hexo.io&#x2F;themes&#x2F;</a> 选择自己喜欢的主题，按照此步的步骤clone下来。</p><h4 id="4-config-yml对博客进行基础配置"><a href="#4-config-yml对博客进行基础配置" class="headerlink" title="4. _config.yml对博客进行基础配置"></a>4. _config.yml对博客进行基础配置</h4><p>_config.yml文件修改，保存<br><img src="https://cdn.nlark.com/yuque/0/2022/png/2597840/1661848258607-c4c3f059-41fe-41b8-8979-280f314718e5.png#clientId=u1454a3d5-f380-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=461&id=ue62d3f98&margin=%5Bobject%20Object%5D&name=image.png&originHeight=461&originWidth=969&originalType=binary&ratio=1&rotation=0&showTitle=false&size=54607&status=done&style=none&taskId=u2992ca88-3cbe-46a5-8d33-be1b8b8bb1c&title=&width=969" alt="image.png"></p><h4 id="5-本地预览博客"><a href="#5-本地预览博客" class="headerlink" title="5. 本地预览博客"></a>5. 本地预览博客</h4><p>编译项目，输入命令：hexo g<br>运行项目，输入命令：hexo s</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs git">$ hexo g<br>INFO  Validating config<br>INFO  Start processing<br>INFO<br>------------------------------------------------<br>|                                              |<br>|     ________  __            _        __      |<br>|    |_   __  |[  |          (_)      |  ]     |<br>|      | |_ \_| | | __   _   __   .--.| |      |<br>|      |  _|    | |[  | | | [  |/ /&#x27;`\&#x27; |      |<br>|     _| |_     | | | \_/ |, | || \__/  |      |<br>|    |_____|   [___]&#x27;.__.&#x27;_/[___]&#x27;.__.;__]     |<br>|                                              |<br>|       Thank you for using Fluid theme !      |<br>|   Docs: https://hexo.fluid-dev.com/docs/en/  |<br>|                                              |<br>------------------------------------------------<br><br>INFO  Files loaded in 207 ms<br>INFO  Generated: archives/index.html<br>INFO  Generated: archives/2022/index.html<br>INFO  Generated: archives/2022/08/index.html<br>INFO  Generated: local-search.xml<br>INFO  Generated: tags/index.html<br>INFO  Generated: categories/index.html<br>INFO  Generated: index.html<br>INFO  Generated: 404.html<br>INFO  Generated: xml/local-search.xml<br>INFO  Generated: links/index.html<br>INFO  Generated: css/highlight-dark.css<br>INFO  Generated: img/police_beian.png<br>INFO  Generated: js/boot.js<br>INFO  Generated: img/fluid.png<br>INFO  Generated: img/avatar.png<br>INFO  Generated: js/img-lazyload.js<br>INFO  Generated: img/loading.gif<br>INFO  Generated: css/gitalk.css<br>INFO  Generated: css/highlight.css<br>INFO  Generated: js/color-schema.js<br>INFO  Generated: js/events.js<br>INFO  Generated: js/local-search.js<br>INFO  Generated: js/plugins.js<br>INFO  Generated: js/leancloud.js<br>INFO  Generated: js/utils.js<br>INFO  Generated: css/main.css<br>INFO  Generated: 2022/08/30/hello-world/index.html<br>INFO  Generated: img/default.png<br>INFO  28 files generated in 309 ms<br><br>liangshaofeng@GZ007054NB MINGW64 /e/lsf/study/project/Blog/Hexo<br>$ hexo s<br>INFO  Validating config<br>INFO  Start processing<br>INFO<br>------------------------------------------------<br>|                                              |<br>|     ________  __            _        __      |<br>|    |_   __  |[  |          (_)      |  ]     |<br>|      | |_ \_| | | __   _   __   .--.| |      |<br>|      |  _|    | |[  | | | [  |/ /&#x27;`\&#x27; |      |<br>|     _| |_     | | | \_/ |, | || \__/  |      |<br>|    |_____|   [___]&#x27;.__.&#x27;_/[___]&#x27;.__.;__]     |<br>|                                              |<br>|       Thank you for using Fluid theme !      |<br>|   Docs: https://hexo.fluid-dev.com/docs/en/  |<br>|                                              |<br>------------------------------------------------<br><br>INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.<br>INFO  Have a nice day<br></code></pre></td></tr></table></figure><p>在浏览器中输入<a href="http://localhost:4000/%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E6%95%88%E6%9E%9C%E5%95%A6">http://localhost:4000/就可以看到效果啦</a></p><h3 id="部署博客到Gitee上"><a href="#部署博客到Gitee上" class="headerlink" title="部署博客到Gitee上"></a>部署博客到Gitee上</h3><h4 id="1-创建Gitee账号"><a href="#1-创建Gitee账号" class="headerlink" title="1. 创建Gitee账号"></a>1. 创建Gitee账号</h4><p>到码云：<a href="https://gitee.com/">https://gitee.com/</a> 上申请注册账号，码云类似国内版的GitHub，所以操作界面跟GitHub差不多，多了一些国产化的东西，这里不做更多介绍了，自己研究下。</p><h4 id="2-创建仓库"><a href="#2-创建仓库" class="headerlink" title="2. 创建仓库"></a>2. 创建仓库</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/2597840/1661850035388-e2f7414e-85e3-4559-9447-f44cfe10af3f.png#clientId=u1454a3d5-f380-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=771&id=u53aa7c64&margin=%5Bobject%20Object%5D&name=image.png&originHeight=771&originWidth=1216&originalType=binary&ratio=1&rotation=0&showTitle=false&size=80564&status=done&style=none&taskId=u703535ae-e272-4102-a15b-230e6ec5917&title=&width=1216" alt="image.png"><br>创建完成后，在项目中复制项目地址。</p><h4 id="3-在-config-yml中配置Git"><a href="#3-在-config-yml中配置Git" class="headerlink" title="3. 在_config.yml中配置Git"></a>3. 在_config.yml中配置Git</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs git">deploy:<br>  type: git<br>  repo: https://gitee.com/liangshaofeng/hexo-blog.git<br>  branch: master<br></code></pre></td></tr></table></figure><p><strong>注意：冒号后面一定要有空格，否则不能正确识别。</strong></p><h4 id="4-发布到Gitee"><a href="#4-发布到Gitee" class="headerlink" title="4. 发布到Gitee"></a>4. 发布到Gitee</h4><p>输入命令npm install hexo-deployer-git –save 安装自动部署发布工具<br>输入命令hexo clean &amp;&amp; hexo g &amp;&amp; hexo d 发布博客，首次发布需要在终端中输入账号和密码。</p><h4 id="5-Gitee-Pages设置"><a href="#5-Gitee-Pages设置" class="headerlink" title="5. Gitee Pages设置"></a>5. Gitee Pages设置</h4><p>在项目的服务中选择Pages选项<br><img src="https://cdn.nlark.com/yuque/0/2022/webp/2597840/1661837141797-3d96989c-be9e-4b3a-bcc1-0a51987a7f19.webp#clientId=u028e2338-aaa0-4&crop=0&crop=0&crop=1&crop=1&from=paste&id=ucb48f74a&margin=%5Bobject%20Object%5D&originHeight=438&originWidth=786&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u75d052f8-d087-4c8e-bd11-1b496bd5403&title="><br>稍等一会儿博客就发布成功啦，访问博客地址：<a href="https://link.juejin.cn/?target=https://xiuxiuing.gitee.io/blog%EF%BC%8C%E5%B0%B1%E5%8F%AF%08%E9%A2%84%E8%A7%88%E5%9C%A8%E7%BA%BF%E5%8D%9A%E5%AE%A2%E5%95%A6%EF%BC%81%EF%BC%81%EF%BC%81">xiuxiuing.gitee.io&#x2F;blog</a><br>如果博客的样式不对，则需要在_config.yml中配置下博客地址和路径：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs git">url: https://xiuxiuing.gitee.io/blog/<br>root: /blog<br></code></pre></td></tr></table></figure><p>再执行命令hexo clean &amp;&amp; hexo g &amp;&amp; hexo d 就可以啦。</p><h3 id="部署博客到Github上"><a href="#部署博客到Github上" class="headerlink" title="部署博客到Github上"></a>部署博客到Github上</h3><h4 id="1-创建Github账号"><a href="#1-创建Github账号" class="headerlink" title="1.创建Github账号"></a>1.创建Github账号</h4><p>到Github：<a href="https://github.com/">https://github.com/</a> 上申请注册账号</p><h4 id="2-创建仓库-1"><a href="#2-创建仓库-1" class="headerlink" title="2.创建仓库"></a>2.创建仓库</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/2597840/1661914577588-d6b66242-a2df-4f5c-8eee-771f5bea3394.png#clientId=ubfdd9514-75dd-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=977&id=u63412bd3&margin=%5Bobject%20Object%5D&name=image.png&originHeight=977&originWidth=1307&originalType=binary&ratio=1&rotation=0&showTitle=false&size=96602&status=done&style=none&taskId=u4fbe9c5b-c142-4403-b279-e6cffdad927&title=&width=1307" alt="image.png"><br><strong>注意：仓库名字必须是：用户名.github.io</strong></p><h4 id="3-配置SSH-免密登录"><a href="#3-配置SSH-免密登录" class="headerlink" title="3.配置SSH 免密登录"></a>3.配置SSH 免密登录</h4><p>为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用<a href="https://so.csdn.net/so/search?q=ssh&spm=1001.2101.3001.7020">ssh</a> key来解决本地和服务器的连接问题。<br>简单的来说就是给予你当前电脑访问你GitHub 仓库的权限 ~<br>（1）生成秘钥<br>在桌面右键 -&gt; Git Bash Here，设置用户名和邮箱：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs git">git config --global user.name &quot;GitHub 用户名&quot;<br>git config --global user.email &quot;GitHub 邮箱&quot;<br></code></pre></td></tr></table></figure><p>（2）创建 SSH 秘钥<br>输入 ssh-keygen -t rsa -C “GitHub 邮箱”，然后一路回车。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs git">$ ssh-keygen -t rsa -C &quot;479632263@qq.com&quot;<br>Generating public/private rsa key pair.<br>Enter file in which to save the key (/c/Users/QDM/.ssh/id_rsa):<br>/c/Users/QDM/.ssh/id_rsa already exists.<br>Overwrite (y/n)? y<br>Enter passphrase (empty for no passphrase):<br>Enter same passphrase again:<br>Your identification has been saved in /c/Users/QDM/.ssh/id_rsa<br>Your public key has been saved in /c/Users/QDM/.ssh/id_rsa.pub<br>The key fingerprint is:<br>SHA256:NW3Gb5I9NshZBbcPW/1JC+PKBQhVt/jZRiNWvJ4uKWY 479632263@qq.com<br>The key&#x27;s randomart image is:<br>+---[RSA 3072]----+<br>|       ..... .ooo|<br>|        . .oo o+o|<br>|         .oo=*o=+|<br>|         . ==BO=*|<br>|        S   *=X=+|<br>|          . o+.= |<br>|           o  o  |<br>|           E o . |<br>|          o . .  |<br>+----[SHA256]-----+<br></code></pre></td></tr></table></figure><p>（3）添加秘钥<br>进入 [C:\Users\用户名.ssh] 目录（要勾选显示“隐藏的项目”），用记事本打开公钥 id_rsa.pub 文件并复制里面的内容。<br>登陆 GitHub ，进入 Settings 页面，选择左边栏的 SSH and GPG keys，点击 New SSH key。<br>Title 随便取个名字，粘贴复制的秘钥内容到 Key 中，点击 Add SSH key 完成添加。<br><img src="https://cdn.nlark.com/yuque/0/2022/png/2597840/1661915689332-b7b130d8-7c12-4af7-b3a3-080f465d847d.png#clientId=ubfdd9514-75dd-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=277&id=u9460f5c6&margin=%5Bobject%20Object%5D&name=image.png&originHeight=277&originWidth=812&originalType=binary&ratio=1&rotation=0&showTitle=false&size=21523&status=done&style=none&taskId=u5c35c2d0-74ee-4f14-967d-8ddea05ae95&title=&width=812" alt="image.png"><br>（4）验证连接<br>打开 Git Bash，输入 ssh -T <a href="mailto:&#x67;&#x69;&#116;&#x40;&#103;&#x69;&#116;&#104;&#x75;&#x62;&#x2e;&#99;&#x6f;&#109;">&#x67;&#x69;&#116;&#x40;&#103;&#x69;&#116;&#104;&#x75;&#x62;&#x2e;&#99;&#x6f;&#109;</a> 出现 “Are you sure……”，输入 yes 回车确认</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs git">$ ssh -T git@github.com<br>Hi liangshaofeng! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.<br></code></pre></td></tr></table></figure><h4 id="3-在-config-yml中配置Git-1"><a href="#3-在-config-yml中配置Git-1" class="headerlink" title="3. 在_config.yml中配置Git"></a>3. 在_config.yml中配置Git</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs git">deploy:<br>  type: git<br>  repo: git@github.com:liangshaofeng/liangshaofeng.github.io.git<br>  branch: main<br></code></pre></td></tr></table></figure><p><strong>注意：冒号后面一定要有空格，否则不能正确识别。</strong><br>**     repo输入的地址是ssh的地址 。**</p><h4 id="4-发布到Gitee-1"><a href="#4-发布到Gitee-1" class="headerlink" title="4. 发布到Gitee"></a>4. 发布到Gitee</h4><p>输入命令npm install hexo-deployer-git –save 安装自动部署发布工具<br>输入命令hexo clean &amp;&amp; hexo g &amp;&amp; hexo d 发布博客，首次发布需要在终端中输入账号和密码。<br>稍等一会儿博客就发布成功啦，访问博客地址：<a href="https://liangshaofeng.github.io/">https://liangshaofeng.github.io/</a></p><h3 id="编写博客"><a href="#编写博客" class="headerlink" title="编写博客"></a>编写博客</h3><h4 id="1-现在博客文章"><a href="#1-现在博客文章" class="headerlink" title="1.现在博客文章"></a>1.现在博客文章</h4><p>在&#x2F;Hexo&#x2F;source&#x2F;_posts 目录下编写md文件。</p><h4 id="2-发布博客文章"><a href="#2-发布博客文章" class="headerlink" title="2.发布博客文章"></a>2.发布博客文章</h4><p>输入命令  hexo clean &amp;&amp; hexo g &amp;&amp; hexo d   即可同步到显示</p><p>至此，我们的博客就搭建完成啦！！！</p>]]></content>
    
    
    <categories>
      
      <category>基本技能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>git基本操作，一篇文章就够了</title>
    <link href="/2022/09/01/%E5%9F%BA%E6%9C%AC%E6%8A%80%E8%83%BD/git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%EF%BC%8C%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%B0%B1%E5%A4%9F%E4%BA%86/"/>
    <url>/2022/09/01/%E5%9F%BA%E6%9C%AC%E6%8A%80%E8%83%BD/git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%EF%BC%8C%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%B0%B1%E5%A4%9F%E4%BA%86/</url>
    
    <content type="html"><![CDATA[<h2 id="1-git简介"><a href="#1-git简介" class="headerlink" title="1. git简介"></a>1. git简介</h2><p>在实际开发中，会使用git作为版本控制工具来完成团队协作。因此，对基本的git操作指令进行总结是十分有必要的，本文对一些术语或者理论基础，不重新码字，可以参考廖雪峰老师的博文，本文只对命令做归纳总结。</p><p>git的通用操作流程如下图</p><p><img src="/'http:/img.codingyang.com/1585190944532-202032610495.png'" alt="测试"></p>]]></content>
    
    
    <categories>
      
      <category>基本技能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>两个盒子，左边固定宽，右边自适应，你能想到几种方法</title>
    <link href="/2022/09/01/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/%E4%B8%A4%E4%B8%AA%E7%9B%92%E5%AD%90%EF%BC%8C%E5%B7%A6%E8%BE%B9%E5%9B%BA%E5%AE%9A%E5%AE%BD%EF%BC%8C%E5%8F%B3%E8%BE%B9%E8%87%AA%E9%80%82%E5%BA%94%EF%BC%8C%E4%BD%A0%E8%83%BD%E6%83%B3%E5%88%B0%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <url>/2022/09/01/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/%E4%B8%A4%E4%B8%AA%E7%9B%92%E5%AD%90%EF%BC%8C%E5%B7%A6%E8%BE%B9%E5%9B%BA%E5%AE%9A%E5%AE%BD%EF%BC%8C%E5%8F%B3%E8%BE%B9%E8%87%AA%E9%80%82%E5%BA%94%EF%BC%8C%E4%BD%A0%E8%83%BD%E6%83%B3%E5%88%B0%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><h3 id="公共的盒子部分"><a href="#公共的盒子部分" class="headerlink" title="公共的盒子部分"></a>公共的盒子部分</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="方法一：float和BFC实现"><a href="#方法一：float和BFC实现" class="headerlink" title="方法一：float和BFC实现"></a>方法一：float和BFC实现</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;style&gt;<br><span class="hljs-selector-class">.content</span> &#123;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#000</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">800px</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;<br>&#125;<br><span class="hljs-selector-class">.left</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>    <span class="hljs-attribute">background</span>: red;<br>    <span class="hljs-attribute">float</span>: left;<br>&#125;<br><span class="hljs-selector-class">.right</span> &#123;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>    <span class="hljs-attribute">background</span>: pink;<br>    <span class="hljs-attribute">overflow</span>: hidden;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><h3 id="方法二：absolute定位和margin值实现"><a href="#方法二：absolute定位和margin值实现" class="headerlink" title="方法二：absolute定位和margin值实现"></a>方法二：absolute定位和margin值实现</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;style&gt;<br> <span class="hljs-selector-class">.content</span> &#123;<br>     <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#000</span>;<br>     <span class="hljs-attribute">height</span>: <span class="hljs-number">800px</span>;<br>     <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;<br>    &#125;<br>    <span class="hljs-selector-class">.left</span> &#123;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>        <span class="hljs-attribute">background</span>: red;<br>        <span class="hljs-attribute">position</span>: absolute;<br>    &#125;<br>    <span class="hljs-selector-class">.right</span> &#123;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>        <span class="hljs-attribute">background</span>: pink;<br>        <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">200px</span>;<br>    &#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><h3 id="方法三：calc-100-固定内容的宽度-用calc函数动态计算数值"><a href="#方法三：calc-100-固定内容的宽度-用calc函数动态计算数值" class="headerlink" title="方法三：calc(100% - 固定内容的宽度) 用calc函数动态计算数值"></a>方法三：calc(100% - 固定内容的宽度) 用calc函数动态计算数值</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;style&gt;<br> <span class="hljs-selector-class">.content</span> &#123;<br>     <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#000</span>;<br>     <span class="hljs-attribute">height</span>: <span class="hljs-number">800px</span>;<br>     <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;<br>    &#125;<br>    <span class="hljs-selector-class">.left</span> &#123;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>        <span class="hljs-attribute">background</span>: red;<br>        <span class="hljs-attribute">float</span>: left;<br>    &#125;<br>    <span class="hljs-selector-class">.right</span> &#123;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>        <span class="hljs-attribute">background</span>: pink;<br>        <span class="hljs-attribute">float</span>: left;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">100%</span> - <span class="hljs-number">200px</span>);<br>    &#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><h3 id="方法四：flex布局轻松搞定"><a href="#方法四：flex布局轻松搞定" class="headerlink" title="方法四：flex布局轻松搞定"></a>方法四：flex布局轻松搞定</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;style&gt;<br>    <span class="hljs-selector-class">.content</span> &#123;<br>        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#000</span>;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">800px</span>;<br>        <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;<br>        <span class="hljs-attribute">display</span>: flex;<br>    &#125;<br>    <span class="hljs-selector-class">.left</span> &#123;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>        <span class="hljs-attribute">background</span>: red;<br>    &#125;<br>    <span class="hljs-selector-class">.right</span> &#123;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>        <span class="hljs-attribute">background</span>: pink;<br>        <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;<br>    &#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><h3 id="方法五：使用table和table-cell实现"><a href="#方法五：使用table和table-cell实现" class="headerlink" title="方法五：使用table和table-cell实现"></a>方法五：使用table和table-cell实现</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;style&gt;<br>     <span class="hljs-selector-class">.content</span> &#123;<br>         <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#000</span>;<br>         <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>         <span class="hljs-attribute">height</span>: <span class="hljs-number">800px</span>;<br>         <span class="hljs-attribute">display</span>: table;<br>     &#125;<br>     <span class="hljs-selector-class">.left</span> &#123;<br>         <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>         <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>         <span class="hljs-attribute">background</span>: red;<br>         <span class="hljs-attribute">display</span>: table-cell;<br>     &#125;<br>     <span class="hljs-selector-class">.right</span> &#123;<br>         <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>         <span class="hljs-attribute">background</span>: pink;<br>         <span class="hljs-attribute">display</span>: table-cell;<br>     &#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><h3 id="方法六：使用inline-block携手calc函数设置宽度"><a href="#方法六：使用inline-block携手calc函数设置宽度" class="headerlink" title="方法六：使用inline-block携手calc函数设置宽度"></a>方法六：使用inline-block携手calc函数设置宽度</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;style&gt;<br>    <span class="hljs-selector-class">.content</span> &#123;<br>        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#000</span>;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">800px</span>;<br>        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-selector-class">.left</span> &#123;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>        <span class="hljs-attribute">background</span>: red;<br>        <span class="hljs-attribute">display</span>: inline-block;<br>        <span class="hljs-attribute">vertical-align</span>: top;<br>    &#125;<br>    <span class="hljs-selector-class">.right</span> &#123;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>        <span class="hljs-attribute">background</span>: pink;<br>        <span class="hljs-attribute">display</span>: inline-block;<br>        <span class="hljs-attribute">vertical-align</span>: top;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-built_in">calc</span>(<span class="hljs-number">100%</span> - <span class="hljs-number">200px</span>);<br>        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br>    &#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>css</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>常用的前端JavaScript方法封装</title>
    <link href="/2022/09/01/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/%E5%B8%B8%E7%94%A8%E7%9A%84%E5%89%8D%E7%AB%AFJavaScript%E6%96%B9%E6%B3%95%E5%B0%81%E8%A3%85/"/>
    <url>/2022/09/01/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/%E5%B8%B8%E7%94%A8%E7%9A%84%E5%89%8D%E7%AB%AFJavaScript%E6%96%B9%E6%B3%95%E5%B0%81%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<p>1、输入一个值，返回其数据类型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">type</span>(<span class="hljs-params">para</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Object</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">toString</span>.<span class="hljs-title function_">call</span>(para)<br>&#125;<br></code></pre></td></tr></table></figure><p>2、数组去重</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">unique1</span>(<span class="hljs-params">arr</span>) &#123;<br>    <span class="hljs-keyword">return</span> [...<span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>(arr)]<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">unique2</span>(<span class="hljs-params">arr</span>) &#123;<br>    <span class="hljs-keyword">var</span> obj = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> arr.<span class="hljs-title function_">filter</span>(<span class="hljs-function"><span class="hljs-params">ele</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (!obj[ele]) &#123;<br>            obj[ele] = <span class="hljs-literal">true</span>;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<br>    &#125;)<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">unique3</span>(<span class="hljs-params">arr</span>) &#123;<br>    <span class="hljs-keyword">var</span> result = [];<br>    arr.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">ele</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (result.<span class="hljs-title function_">indexOf</span>(ele) == -<span class="hljs-number">1</span>) &#123;<br>            result.<span class="hljs-title function_">push</span>(ele)<br>        &#125;<br>    &#125;)<br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br></code></pre></td></tr></table></figure><p>3.返回当前的时间（年月日时分秒）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">getDateTime</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> date = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(),<br>        year = date.<span class="hljs-title function_">getFullYear</span>(),<br>        month = date.<span class="hljs-title function_">getMonth</span>() + <span class="hljs-number">1</span>,<br>        day = date.<span class="hljs-title function_">getDate</span>(),<br>        hour = date.<span class="hljs-title function_">getHours</span>() + <span class="hljs-number">1</span>,<br>        minute = date.<span class="hljs-title function_">getMinutes</span>(),<br>        second = date.<span class="hljs-title function_">getSeconds</span>();<br>        month = <span class="hljs-title function_">checkTime</span>(month);<br>        day = <span class="hljs-title function_">checkTime</span>(day);<br>        hour = <span class="hljs-title function_">checkTime</span>(hour);<br>        minute = <span class="hljs-title function_">checkTime</span>(minute);<br>        second = <span class="hljs-title function_">checkTime</span>(second);<br>     <span class="hljs-keyword">function</span> <span class="hljs-title function_">checkTime</span>(<span class="hljs-params">i</span>) &#123;<br>        <span class="hljs-keyword">if</span> (i &lt; <span class="hljs-number">10</span>) &#123;<br>                i = <span class="hljs-string">&quot;0&quot;</span> + i;<br>       &#125;<br>      <span class="hljs-keyword">return</span> i;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span> + year + <span class="hljs-string">&quot;年&quot;</span> + month + <span class="hljs-string">&quot;月&quot;</span> + day + <span class="hljs-string">&quot;日&quot;</span> + hour + <span class="hljs-string">&quot;时&quot;</span> + minute + <span class="hljs-string">&quot;分&quot;</span> + second + <span class="hljs-string">&quot;秒&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>4.获得滚动条的滚动距离</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">getScrollOffset</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">window</span>.<span class="hljs-property">pageXOffset</span>) &#123;<br>        <span class="hljs-keyword">return</span> &#123;<br>            <span class="hljs-attr">x</span>: <span class="hljs-variable language_">window</span>.<span class="hljs-property">pageXOffset</span>,<br>            <span class="hljs-attr">y</span>: <span class="hljs-variable language_">window</span>.<span class="hljs-property">pageYOffset</span><br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> &#123;<br>            <span class="hljs-attr">x</span>: <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">scrollLeft</span> + <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">scrollLeft</span>,<br>            <span class="hljs-attr">y</span>: <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">scrollTop</span> + <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">scrollTop</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>5.获取url中的参数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">getWindonHref</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> sHref = <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">href</span>;<br>    <span class="hljs-keyword">var</span> args = sHref.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;?&#x27;</span>);<br>    <span class="hljs-keyword">if</span> (args[<span class="hljs-number">0</span>] === sHref) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">var</span> hrefarr = args[<span class="hljs-number">1</span>].<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;#&#x27;</span>)[<span class="hljs-number">0</span>].<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;&amp;&#x27;</span>);<br>    <span class="hljs-keyword">var</span> obj = &#123;&#125;;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; hrefarr.<span class="hljs-property">length</span>; i++) &#123;<br>        hrefarr[i] = hrefarr[i].<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;=&#x27;</span>);<br>        obj[hrefarr[i][<span class="hljs-number">0</span>]] = hrefarr[i][<span class="hljs-number">1</span>];<br>    &#125;<br>    <span class="hljs-keyword">return</span> obj;<br>&#125;<br></code></pre></td></tr></table></figure><p>6.防抖</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">debounce</span>(<span class="hljs-params">handle, delay</span>) &#123;<br>    <span class="hljs-keyword">var</span> timer = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">var</span> _self = <span class="hljs-variable language_">this</span>,<br>            _args = <span class="hljs-variable language_">arguments</span>;<br>        <span class="hljs-built_in">clearTimeout</span>(timer);<br>        timer = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            handle.<span class="hljs-title function_">apply</span>(_self, _args)<br>        &#125;, delay)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>7.节流</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">throttle</span>(<span class="hljs-params">handler, wait</span>) &#123;<br>    <span class="hljs-keyword">var</span> lastTime = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>        <span class="hljs-keyword">var</span> nowTime = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getTime</span>();<br>        <span class="hljs-keyword">if</span> (nowTime - lastTime &gt; wait) &#123;<br>            handler.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>);<br>            lastTime = nowTime;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>项目中用的20个轮子 开发效率提升200%</title>
    <link href="/2022/09/01/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%94%A8%E7%9A%8420%E4%B8%AA%E8%BD%AE%E5%AD%90%20%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%90%E5%8D%87200%25/"/>
    <url>/2022/09/01/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%94%A8%E7%9A%8420%E4%B8%AA%E8%BD%AE%E5%AD%90%20%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E6%8F%90%E5%8D%87200%25/</url>
    
    <content type="html"><![CDATA[<blockquote><p><strong>React UI组件库</strong></p></blockquote><ol><li>Ant Design ：文档齐全，社区生态良好，有手机版，还有PC版。可以用来快速创建手机&#x2F;后台&#x2F;内部应用的UI组件库。</li></ol><p>网址：<a href="https://ant.design/">https://ant.design/</a></p><ol start="2"><li>React Bootstrap : BootStrap我在JQuery时代就开始使用，现在已经推出了React Bootstrap， 虽然UI设计上没什么出彩，但是快速完成个人小项目已经足够了。</li></ol><p>网址：<a href="https://react-bootstrap.github.io/">https://react-bootstrap.github.io/</a></p><ol start="3"><li>MATERIAL-UI：实现了Google的Material Design 全新设计语言的React组件库。在Github上有超过5万star，最受欢迎的React组件库之一。现在也叫做Mui。</li></ol><p>网址：<a href="http://material-ui.com/">material-ui.com&#x2F;</a> or <a href="https://mui.com/zh/">https://mui.com/zh/</a></p><blockquote><p><strong>Vue UI组件库</strong></p></blockquote><ol><li>Element ： 国内最流行的Vue UI组件库，文档完整，支持在Vue3下使用。而且Element还提供了Element-React版本和Element-Angular版本。也就是说你掌握一套UI，可以在主流的前端开发框架中使用，如果你只学一套UI组件库，学这个就没错了。</li></ol><p>网址：<a href="https://element.eleme.io/#/zh-CN">https://element.eleme.io/#/zh-CN</a></p><ol start="2"><li>vant ：有赞公司旗下的开源组件库，适用于移动端开发。组件齐全，使用简单，UI设计也非常漂亮。网址：<a href="http://youzan.github.io/vant/#/zh-C%E2%80%A6">youzan.github.io&#x2F;vant&#x2F;#&#x2F;zh-C…</a></li><li>View UI： 我刚接触Vue开发使用，第一个项目中使用的UI组件库，UI设计的非常精美，有免费版和专业版（也就是收费版）。从收费版出了以后，我使用的就少了。</li></ol><p>网址：<a href="http://www.iviewui.com/">www.iviewui.com/</a></p><blockquote><p><strong>动画库</strong></p></blockquote><ol><li>Animate.css 纯css的动画库，所以无论你前端使用什么框架，都可以非常方便的使用它，内置了超多的动画效果，并且预览起来也非常方便。</li></ol><p>网址：<a href="https://animate.style/">https://animate.style/</a></p><blockquote><p><strong>常用效果组件</strong></p></blockquote><ol><li>轮播图组件：swiper，这个提供的轮播图效果太多了，中文文档齐全，还有交流QQ群。支持原生、JQuery、Vue、React、Angular等，任何前端开发场景中使用。而且还有PC端和移动端。比较讨厌的是官网有很多弹出广告，但也能理解，为了生存吗。</li></ol><p>网址：<a href="https://www.swiper.com.cn/">https://www.swiper.com.cn/</a></p><ol start="2"><li>滚动插件：mescroll.js , 移动端的滚动经常会出现不流畅，延迟等问题。我也尝试着去使用了很多大神些的滚动插件，多方比较，我选定了这款插件。他是基于H5的，不依赖来与其它前端框架，侵入性很小，实用性很大。如果你在滚动中遇到了问题，可以使用这个插件来解决。</li></ol><p>网址：<a href="http://www.mescroll.com/api.html">http://www.mescroll.com/api.html</a></p><blockquote><p><strong>工具类轮子</strong></p></blockquote><ol><li>函数库：lodash.js ,是一个一致性、模块化、高性能的JavaScript实用工具库。这个函数库可以在原生JS中使用，也可以在React和Vue中使用。几乎你开发中所有的函数，这个库都给你写好。你需要作的就是熟练和恰到好处的使用。</li></ol><p>网址：<a href="https://www.lodashjs.com/">https://www.lodashjs.com/</a></p><ol start="2"><li>函数库：Day.js , 它是一个极简的JavaScript库，可以为你很好的验证、操作和显示日期和时间。</li></ol><p>网址：<a href="https://dayjs.fenxianglu.cn/">https://dayjs.fenxianglu.cn/</a></p><ol start="3"><li>timeago.js，它是显示几小时之前，很多随时更新的网站和应用，为了显示出及时性，不再显示具体发布的时间，而是改为几分钟或者几小时前发布的。这样显着时效性更好。这个插件的作用就是这个。如果需要，请收藏好。</li></ol><p>网址：<a href="https://github.com/hustcc/timeago.js">https://github.com/hustcc/timeago.js</a></p><ol start="4"><li>echarts 数据可视化： 我们公司的所有数据可视化插件都使用的这个组件库，可以满足企业级开发的需求。这个也算是国内最好的可视化开发组件库了。</li></ol><p>网址：<a href="https://echarts.apache.org/zh/index.html">https://echarts.apache.org/zh/index.html</a></p><ol start="5"><li>Markdown编辑器： Markdown ，作为程序员，编写Markdown格式的文档已经是必会技能了，所以如果是为程序员开发的应用和网站，一定要支持Markdown功能。我在选择Markdown编辑器时踩了很多坑，最终才找到了这款好用的组件。</li></ol><p>网址：<a href="https://pandao.github.io/editor.md/">https://pandao.github.io/editor.md/</a></p><ol start="6"><li>表单验证：validator.js ，这个组件我想大部分人都用过，因为无论时用户端，还是管理端前台开发验证都时必须的，无论是公司，还是个人。我都一直在使用这个验证插件。</li></ol><p>网址:<a href="https://github.com/validatorjs/validator.js">https://github.com/validatorjs/validator.js</a></p><blockquote><p><strong>Vue的常用工具组件</strong></p></blockquote><ol><li>Vue拖拽组件 ：vue-draggable, 用于现在开发的应用都需要有移动端，所以拖拽操作越来越多了，它是我目前看到的基于Vue的最好拖拽组件。</li></ol><p>网址：<a href="https://www.itxst.com/vue-draggable/tutorial.html">https://www.itxst.com/vue-draggable/tutorial.html</a></p><ol start="2"><li>Vue生成二维码：vue-qr 如果你需要生成二维码，用这个组件绝对没错，公司的项目一直在使用，可以方便快捷的生成任何形式的二维码。包括彩色和自定义样式。</li></ol><p>网址：<a href="https://www.npmjs.com/package/vue-qr">https://www.npmjs.com/package/vue-qr</a></p><ol start="3"><li>Vue图片剪裁 ： vue-cropper 无论开发任何应用，都需要用户上传图片。但又为了保持页面的一致性，所以要对上传的图片，安装设计规范，进行裁切。这时候你就可以使用这个组件了。</li></ol><p>网址：<a href="https://github.com/xyxiao001/vue-cropper">https://github.com/xyxiao001/vue-cropper</a></p><ol start="4"><li>图片懒加载：vue-lazyload 其实很多UI组件库已经有这个图片懒加载的给功能了，但是还是单独提出来一下，因为它不会和其它Vue组件库冲突，而且功能更多。</li></ol><p>网址：<a href="https://www.npmjs.com/package/vue-lazyload">https://www.npmjs.com/package/vue-lazyload</a></p><ol start="5"><li>Vue上传组件：vue-simple-upload 上传也是我们绕不开的开发需求，所以你必须拥有一个完全好用的上传组件。它非常好用，但缺点是没有官方网站，只有一个Github地址。</li></ol><p>网址：<a href="https://github.com/saivarunk/vue-simple-upload">https://github.com/saivarunk/vue-simple-upload</a></p>]]></content>
    
    
    <categories>
      
      <category>前端技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>轮子</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的周末</title>
    <link href="/2022/08/31/%E7%94%9F%E6%B4%BB%E5%B0%8F%E8%AE%B0/%E6%88%91%E7%9A%84%E5%91%A8%E6%9C%AB/"/>
    <url>/2022/08/31/%E7%94%9F%E6%B4%BB%E5%B0%8F%E8%AE%B0/%E6%88%91%E7%9A%84%E5%91%A8%E6%9C%AB/</url>
    
    <content type="html"><![CDATA[<h2 id="我的周末"><a href="#我的周末" class="headerlink" title="我的周末"></a>我的周末</h2>]]></content>
    
    
    <categories>
      
      <category>生活小记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>玩乐</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
